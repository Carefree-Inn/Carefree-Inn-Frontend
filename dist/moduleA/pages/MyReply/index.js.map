{"version":3,"file":"moduleA/pages/MyReply/index.js","sources":["webpack:///._src_moduleA_pages_MyReply_index.jsx","webpack:///._src_Components_Notification_index.jsx","webpack:///._src_Components_Notification_index.less","webpack:///./src/moduleA/pages/MyReply/index.jsx?0385","webpack:///._src_moduleA_pages_MyReply_index.less"],"sourcesContent":["import { useReady,getCurrentInstance,useReachBottom}from '@tarojs/taro'\nimport { View} from '@tarojs/components'\nimport { useEffect, useState } from 'react'\nimport Notification from '../../../Components/Notification'\n/* import Fetch from '../../../Service/fetch' */\nimport './index.less'\nimport { getJson } from '../../../Service/fet'\n\n\n\nconst MyReply = ()=>{\n\n\n    const [msg,setMsg] = useState([])\n    const [his,setHis] = useState([])//历史通知\n    const [page,setPage] = useState(0)\n    const limit =10\n    const [fresh,setFresh] = useState(false)//刷新标识\n    const [bottom,setBottom] = useState(false)\n\n  useReady(()=>{\n    // console.log('Ready')\n     const params = getCurrentInstance()\n     const param = params.router.params\n     const data = JSON.parse(param.message)\n     console.log( JSON.parse(param.message))\n     setMsg(data.data)\n     //const data = JSON.parse(param.message)\n    // setMsg(data.data)\n   })\n\n   //触底刷新\n   useReachBottom(() => {\n    setFresh(!fresh)\n    //setPage(page+1)\n })\n\n   useEffect(()=>{\n        getJson(\n            '/notification/history?page=' + page+1 + '&limit=' + limit\n            )\n        .then(res=>{\n            console.log(res)\n            if(res.data.length>0)\n            {   setBottom(false)\n                setPage(page+1)\n                setHis(his.concat(res.data))\n            }\n            else\n                setBottom(true)\n        })\n   },[fresh])\n\n\n\n    return (\n        <>\n            <View className='reply'>\n                <View className='lastest'>最新</View>\n                <View className='l_box'>\n                    {msg.map((item)=>{\n                        return(\n                            <Notification key={item.create_time} is_to_post={item.is_to_post} id={item.post_id} comment_name={item.from_user_nick_name} like_name={item.from_user_nickname} create_time={item.create_time} like_type={item.like_type} content={item.content} comment_time={item.comment_time} avatar={item.from_user_avatar} />\n                        )\n                    })}\n                </View>\n                <View className='history'>历史</View>\n                <View className='h_box'>\n                {his.map((item)=>{\n                        return(\n                            <Notification key={item.action_time} type={item.action_type} is_to_post={item.is_to_post} id={item.post_id} comment_name={item.from_user_nickname} like_name={item.from_user_nickname} create_time={item.action_time}  content={item.comment_content} comment_time={item.action_time} avatar={item.from_user_avatar} />\n                        )\n                    })}  \n                </View>\n                <View className='btm'>{bottom?'已经到底啦!':''}</View>\n            </View>\n        </>\n    )\n}\n\nexport default MyReply;","\nimport {Image, Text, View} from \"@tarojs/components\";\nimport { useEffect, useState } from \"react\";\n//import mine from '../../Images/avatar.png'\nimport './index.less'\nimport { getJson } from \"../../Service/fet\";\n\n\n\nconst Notification = (props) =>{\n\n    const {comment_name,like_name, create_time, comment_time,avatar,id,content/* is_to_post */} = props\n    const [type,setType] = useState(0) //0:点赞 1:评论\n   // const [r_comment,setR_comment] = useState()\n    const [post,setPost] = useState('')\n\n    useEffect(()=>{\n        if(props.like_type||props.type=='like')//对帖子的点赞\n        { \n            console.log('like')\n            setType(0)\n        }\n        else{\n           /*  if(is_to_post==false)//回复的是评论\n                setR_comment(true)\n            else//对帖子的评论 */\n                setType(1)\n        }\n        getJson(\n            '/post/info?post_id=' + id\n            )\n        .then(res=>{\n            console.log(res)\n            if(res.status==500)\n                setPost('该帖子已被删除!')\n            if(res.status==200)\n                setPost(res.data.content)\n        }).catch((error)=>{console.log(error)})\n    },[])\n\n    return(\n        <>\n            <View className='notif'>\n                <View className='avatar'>\n                    <Image className='img' src={avatar}></Image>\n                </View>\n                <View className='text'>\n                    <View className='top'><Text className='name'>{comment_name?comment_name:like_name}</Text>&nbsp;&nbsp;{type?/* r_comment? *//* '回复': */'评论':'点赞'}了我的{/* {r_comment? */}评论{/* :'帖子'}  */} </View>\n                    <View className='comment'>{content}</View>\n                    <Text className='time'>{create_time?create_time:comment_time}</Text>\n                </View>\n                <View className='post'>{post}</View>\n            </View>\n        </>\n    )\n}\n\nexport default Notification;","// extracted by mini-css-extract-plugin","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../../node_modules/babel-loader/lib/index.js!./index.jsx\"\nvar config = {\"navigationBarTitleText\":\"点赞和评论\"};\n\n\nvar inst = Page(createPageConfig(component, 'moduleA/pages/MyReply/index', {root:{cn:[]}}, config || {}))\n\n\n","// extracted by mini-css-extract-plugin"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAIA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAIA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAGA;AAEA;;;;;;;;;;;;;;;;;;;;;;;AC/EA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAIA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAEA;AAEA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAGA;AAEA;;;;;;;;;;;ACzDA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACPA;;;;A","sourceRoot":""}